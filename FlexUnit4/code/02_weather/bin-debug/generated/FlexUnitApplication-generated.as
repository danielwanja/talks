
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      FlexUnitApplication
 *  Source:     /Volumes/MyStuff/GitProjects/talks/FlexUnit4/code/02_weather/src/FlexUnitApplication.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.08.29 19:47:27 MDT
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import flexunit.flexui.FlexUnitTestRunnerUI;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.styles.*;
import spark.components.Application;


[Frame(extraClass="_FlexUnitApplication_FlexInit")]

[Frame(factoryClass="_FlexUnitApplication_mx_managers_SystemManager")]


//  begin class def
public class FlexUnitApplication
    extends spark.components.Application
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var testRunner : flexunit.flexui.FlexUnitTestRunnerUI;


    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function FlexUnitApplication()
    {
        super();

        mx_internal::_document = this;




        // layer initializers

       
        // properties
        this.minWidth = 955;
        this.minHeight = 600;
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_FlexUnitApplication_Array1_c);


        // events
        this.addEventListener("creationComplete", ___FlexUnitApplication_Application1_creationComplete);












    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings


        // ambient styles
        mx_internal::_FlexUnitApplication_StylesInit();

                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 11 - 27

			import test.WeatherTest;
			
			public function currentRunTestSuite():Array
			{
				var testsToRun:Array = new Array();
				testsToRun.push(test.WeatherTest);
				return testsToRun;
			}
			
			
			private function onCreationComplete():void
			{
				testRunner.runWithFlexUnit4Runner(currentRunTestSuite(), "FU_02_Weather");
			}
			
		

    //  end scripts


    //  supporting function definitions for properties, events, styles, effects
private function _FlexUnitApplication_Array1_c() : Array
{
	var temp : Array = [_FlexUnitApplication_FlexUnitTestRunnerUI1_i()];
	return temp;
}

private function _FlexUnitApplication_FlexUnitTestRunnerUI1_i() : flexunit.flexui.FlexUnitTestRunnerUI
{
	var temp : flexunit.flexui.FlexUnitTestRunnerUI = new flexunit.flexui.FlexUnitTestRunnerUI();
	temp.id = "testRunner";
	if (!temp.document) temp.document = this;
	testRunner = temp;
	mx.binding.BindingManager.executeBindings(this, "testRunner", testRunner);
	return temp;
}

/**
 * @private
 **/
public function ___FlexUnitApplication_Application1_creationComplete(event:mx.events.FlexEvent):void
{
	onCreationComplete()
}



    //  initialize style defs for FlexUnitApplication

    mx_internal var _FlexUnitApplication_StylesInit_done:Boolean = false;

    mx_internal function _FlexUnitApplication_StylesInit():void
    {
        //  only add our style defs to the style manager once
        if (mx_internal::_FlexUnitApplication_StylesInit_done)
            return;
        else
            mx_internal::_FlexUnitApplication_StylesInit_done = true;
            
        var style:CSSStyleDeclaration;
        var effects:Array;
                    

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

        styleManager.initProtoChainRoots();
    }


    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
